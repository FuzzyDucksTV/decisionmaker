{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\water\\\\source\\\\repos\\\\decision-maker-app\\\\decision-maker-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport CategorySelection from './components/CategorySelection';\nimport OptionCard from './components/common/OptionCard';\nimport DecisionButton from './components/DecisionButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [selectedOptions, setSelectedOptions] = useState([]);\n  const categories = ['Movies', 'Food', 'Travel'];\n  const options = [{\n    title: 'Option 1',\n    description: 'Description for option 1'\n  }, {\n    title: 'Option 2',\n    description: 'Description for option 2'\n  }\n  // ... more options\n  ];\n\n  const handleCategorySelect = category => {\n    setSelectedCategory(category);\n  };\n  const handleOptionSelect = option => {\n    setSelectedOptions([...selectedOptions, option]);\n  };\n  const handleDecision = () => {\n    // Logic to make a decision based on selected options\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(CategorySelection, {\n      categories: categories,\n      onCategorySelect: handleCategorySelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), selectedCategory && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"options\",\n      children: options.map((option, index) => /*#__PURE__*/_jsxDEV(OptionCard, {\n        option: option,\n        onOptionSelect: handleOptionSelect\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), selectedOptions.length > 0 && /*#__PURE__*/_jsxDEV(DecisionButton, {\n      onClick: handleDecision\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 38\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"DMwfoKd/A5VXZCP0b09RpxEzh2w=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","CategorySelection","OptionCard","DecisionButton","jsxDEV","_jsxDEV","App","_s","selectedCategory","setSelectedCategory","selectedOptions","setSelectedOptions","categories","options","title","description","handleCategorySelect","category","handleOptionSelect","option","handleDecision","className","children","onCategorySelect","fileName","_jsxFileName","lineNumber","columnNumber","map","index","onOptionSelect","length","onClick","_c","$RefreshReg$"],"sources":["C:/Users/water/source/repos/decision-maker-app/decision-maker-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport CategorySelection from './components/CategorySelection';\nimport OptionCard from './components/common/OptionCard';\nimport DecisionButton from './components/DecisionButton';\n\nconst App = () => {\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [selectedOptions, setSelectedOptions] = useState([]);\n\n  const categories = ['Movies', 'Food', 'Travel'];\n\n  const options = [\n    { title: 'Option 1', description: 'Description for option 1' },\n    { title: 'Option 2', description: 'Description for option 2' },\n    // ... more options\n  ];\n\n  const handleCategorySelect = (category) => {\n    setSelectedCategory(category);\n  };\n\n  const handleOptionSelect = (option) => {\n    setSelectedOptions([...selectedOptions, option]);\n  };\n\n  const handleDecision = () => {\n    // Logic to make a decision based on selected options\n  };\n\n  return (\n    <div className=\"app\">\n      <CategorySelection\n        categories={categories}\n        onCategorySelect={handleCategorySelect}\n      />\n\n      {selectedCategory && (\n        <div className=\"options\">\n          {options.map((option, index) => (\n            <OptionCard key={index} option={option} onOptionSelect={handleOptionSelect} />\n          ))}\n        </div>\n      )}\n\n      {selectedOptions.length > 0 && <DecisionButton onClick={handleDecision} />}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,iBAAiB,MAAM,gCAAgC;AAC9D,OAAOC,UAAU,MAAM,gCAAgC;AACvD,OAAOC,cAAc,MAAM,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC9D,MAAM,CAACU,eAAe,EAAEC,kBAAkB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE1D,MAAMY,UAAU,GAAG,CAAC,QAAQ,EAAE,MAAM,EAAE,QAAQ,CAAC;EAE/C,MAAMC,OAAO,GAAG,CACd;IAAEC,KAAK,EAAE,UAAU;IAAEC,WAAW,EAAE;EAA2B,CAAC,EAC9D;IAAED,KAAK,EAAE,UAAU;IAAEC,WAAW,EAAE;EAA2B;EAC7D;EAAA,CACD;;EAED,MAAMC,oBAAoB,GAAIC,QAAQ,IAAK;IACzCR,mBAAmB,CAACQ,QAAQ,CAAC;EAC/B,CAAC;EAED,MAAMC,kBAAkB,GAAIC,MAAM,IAAK;IACrCR,kBAAkB,CAAC,CAAC,GAAGD,eAAe,EAAES,MAAM,CAAC,CAAC;EAClD,CAAC;EAED,MAAMC,cAAc,GAAGA,CAAA,KAAM;IAC3B;EAAA,CACD;EAED,oBACEf,OAAA;IAAKgB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBjB,OAAA,CAACJ,iBAAiB;MAChBW,UAAU,EAAEA,UAAW;MACvBW,gBAAgB,EAAEP;IAAqB;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC,EAEDnB,gBAAgB,iBACfH,OAAA;MAAKgB,SAAS,EAAC,SAAS;MAAAC,QAAA,EACrBT,OAAO,CAACe,GAAG,CAAC,CAACT,MAAM,EAAEU,KAAK,kBACzBxB,OAAA,CAACH,UAAU;QAAaiB,MAAM,EAAEA,MAAO;QAACW,cAAc,EAAEZ;MAAmB,GAA1DW,KAAK;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAuD,CAC9E;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CACN,EAEAjB,eAAe,CAACqB,MAAM,GAAG,CAAC,iBAAI1B,OAAA,CAACF,cAAc;MAAC6B,OAAO,EAAEZ;IAAe;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvE,CAAC;AAEV,CAAC;AAACpB,EAAA,CA1CID,GAAG;AAAA2B,EAAA,GAAH3B,GAAG;AA4CT,eAAeA,GAAG;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}